# -*- coding: utf-8 -*-
"""pandas_aula_02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AknQmFb-AHx6PQkj6WWOyC4IQC7Trto0

Importando as bibliotecas necessárias:
"""

import numpy as np
import pandas as pd

"""Importando o dataframe dados_funcionario.csv"""

from google.colab import files 
uploaded = files.upload()

df = pd.read_csv('dados_funcionario.csv')

"""Verificar o dataframe:"""

df.info()

df.head(10)

df.columns

"""#Manipular o dataframe:
#calculando o IMC e adicionando a um novo dataframe.
"""

imc=(df['peso']/df['altura']**2)*10000
df_IMC=df
df_IMC['imc']=imc
display (df_IMC)

lista_peso=list(df['peso'])
lista_altura=list(df['altura'])
lista_IMC = list(map(lambda peso,altura: (peso/altura**2)*10000, lista_peso,lista_altura))
df2_IMC=df
df2_IMC['imc']=(lista_IMC)
display (df2_IMC)

"""#ordenando os elementos de uma coluna de maneira ascendente."""

df_ord_peso=df.sort_values(by='peso',ascending=True)
print(df_ord_peso)

df_ord_IMC=df.sort_values(by='imc',ascending=True)
print(df_ord_IMC)

df_ord_IMC_top3=df.sort_values(by='imc',ascending=True)[0:3]
print(df_ord_IMC_top3)

"""Converter a variável categórica sexo em numérica"""

df['sexo'] = df['sexo'].map({'m': 0, 'f': 1})
print(df)

"""# Aplicando um filtro num valor de uma coluna:"""

df2 = df[ (df['idade'] >= 30) ]
print(df2)

print(df)

"""#Usando condicional no dataframe."""

df3 = df[ (df['idade'] >= 30) & (df['peso'] >= 60)]
print(df3)

df4 = df[ (df['idade'] >= 33) | (df['cidade'] == 'camacari')]
print(df4)

"""#value_counts"""

df['peso'].value_counts()

df['peso'].value_counts(normalize=True)

print(df)

"""# trabalhando com a data."""

from datetime import date, time, datetime
df['data_padrao']=pd.to_datetime(df['data_nascimento'])

df['ano']=pd.to_datetime(df['data_nascimento']).dt.year

df.head()

"""#Groupby"""

df_gb1=df.groupby('cidade').count().reset_index()
df_gb1

df_gb2=df.groupby('cidade').agg({'peso':'mean'}).reset_index()
df_gb2

df_gb3=df.groupby('cidade').agg({'peso':'mean','altura':'mean'}).reset_index()
df_gb3

"""#agregação"""

df_agg_01=df['peso'].agg(sum)
print(df_agg_01)

df_agg_02=df[['peso','altura']].agg(max)
print(df_agg_02)

"""#Criando um status para a coluna imc"""

df['status']=['você está ok' if 20<=imc<=25 else 'precisa emagrecer' for imc in df['imc']]
print(df)

df5=df.loc[df['status']=='você está ok']
print(df5)

#renomeando uma coluna
df=df.rename(columns={'sexo':'genero'})
print(df)

